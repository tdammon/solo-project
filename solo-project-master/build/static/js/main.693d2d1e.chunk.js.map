{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/userReducerToSettings.js","redux/reducers/flashcardsReducer.js","redux/reducers/settingsReducer.js","redux/reducers/historyReducer.js","redux/reducers/apiReducer.js","redux/reducers/languagesReducer.js","redux/reducers/allCardsReducer.js","redux/reducers/masteredCardsReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/flashcardsSaga.js","redux/sagas/settingsSaga.js","redux/sagas/historySaga.js","redux/sagas/apiRequestSaga.js","redux/sagas/languagesSage.js","redux/sagas/allCardsSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/SettingsPage/SettingsPage.js","components/ProgressChart/ProgressChart.js","components/FlashcardsPage/FlashcardsPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AboutPage/AboutPage.js","components/UserPage/UserPage.js","components/InfoPage/InfoPage.js","components/TranslationPage/TranslationPage.js","components/StatisticsPage/StatisticsPage.js","components/AllCardsPage/AllCardsPage.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","userReducerToSettings","console","log","flashcards","slice","currentCard","Object","toConsumableArray","concat","native_word","translation","settingsReducer","flashcardHistory","api","languages","allcards","masteredCards","rootReducer","errors","user","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","response","status","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","resp","get","sent","data","id","userSaga_marked","userSaga_marked2","getFlashcards","getMastered","checkForDuplicate","makeFlashcard","editFlashcard","lockCard","flashcardsSaga","call","params","filter","flashcardsSaga_marked","flashcardsSaga_marked2","word","inputText","alert","flashcardsSaga_marked3","_context4","_marked4","_context5","user_id","_marked5","_context6","_marked6","_context7","_marked7","getSettings","setSettings","newSettings","settingsSaga","settingsSaga_marked","settingsSaga_marked2","settingsSaga_marked3","settingsSaga_marked4","getHistory","setHistory","historySaga","historySaga_marked","frequencyUpdate","correct","historySaga_marked2","historySaga_marked3","apiRequest","apiRequestSaga","translations","translatedText","apiRequestSaga_marked","apiRequestSaga_marked2","getLanguages","languagesSaga","languagesSage_marked","languagesSage_marked2","getAllCards","allCardsSaga","allCardsSaga_marked","allCardsSaga_marked2","rootSaga","all","sagas_marked","connect","props","react_default","createElement","className","onClick","dispatch","Link","to","Fragment","components_LogOutButton_LogOutButton","Footer","LoginPage","username","password","login","event","preventDefault","_this","handleInputChangeFor","propertyName","setState","defineProperty","target","value","_this2","role","onSubmit","htmlFor","name","onChange","Component","RegisterPage","SettingsPage","native_language","translated_language","cards_per_session","words_mastered","words_per_week","open1","open2","open3","open4","open5","handleChange","tag","objectSpread","handleClickOpen","handleClose","updateSettings","s","l","settings","native","nat_lang_id","translated","trans_lang_id","words","words_per_session","classes","containers","form","Paper_default","header","paper","inputTitles","index_es","labels","variant","inputFields","Button_default","button","disableBackdropClick","disableEscapeKeyDown","open","onClose","DialogTitle_default","DialogContent_default","FormControl_default","InputLabel_default","Select_default","map","language","DialogActions_default","label","margin","confirmButton","withStyles","theme","display","justifyContent","fontSize","marginLeft","backgroundColor","height","padding","borderRadius","width","marginTop","marginBottom","flexDirection","ProgressChart","getWordsMastered","pieholder","piechart","react_chartjs_2_es","datasets","mastered","count","options","title","text","legend","position","maintainAspectRatio","scales","xAxes","stacked","categoryPercentage","yAxes","ticks","beginAtZero","max","stepSize","hist","marginRight","leftPadding","paddingLeft","FlashcardsPage","sortBy","front","back","word_id","flip","beginFlashcardSession","deck","card","displayFlashcard","flipCard","sendAnswer","number","frequency","incorrect","date_mastered","prevProps","page","progressChart","components_ProgressChart_ProgressChart","container","flashcardBox","RadioGroup_default","group","FormControlLabel_default","select","control","Radio_default","flashcard","centerItem","responseButtons","IconButton_default","icons_index_es","paddingBottom","alignItems","textAlign","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","AboutPage","InfoPage","TranslationPage","clearFields","translatePhrase","translated_language_code","native_language_code","saveFlashCard","language_id","translateBox","TextField_default","input","translateButton","multiline","rows","buttonContainer","alignSelf","CustomTableCell","head","borderWidth","borderSyle","borderColor","body","TableCell","StatisticsPage","searchHistory","string","now","Date","dayArray","item","parse","date","dayCorrect","dayIncorrect","weekArray","weekCorrect","weekIncorrect","monthArray","monthCorrect","monthIncorrect","careerCorrect","careerIncorrect","correctOrNot","style","color","Table_default","table","TableHead_default","TableRow_default","row","&:nth-of-type(odd)","palette","background","default","AllCardsPage","editWord","editTranslation","word_ids","allCardsPage","AllCardsPage_CustomTableCell","Dialog_default","App","HashRouter","components_Nav_Nav","Switch","Redirect","exact","from","path","components_ProtectedRoute_ProtectedRoute","UserPage","render","components_Footer_Footer","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.693d2d1e.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const userReducerToSettings = (state = {}, action) => {\n    switch (action.type) {\n      case 'SET_USER_TO_SETTINGS':\n      console.log('hello')\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n\n  export default userReducerToSettings;","const flashcards = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_FLASHCARD':\n      console.log(action.payload)\n        return action.payload;\n      case 'UPDATE_FLASHCARD_ARRAY':\n      console.log('updating flashcards', action.payload)\n      if(state.length > 1){\n        if(action.payload != 0){\n          return state.slice(1,state.length)\n        } else {\n          let currentCard = state[0]\n          return [...state.slice(1,state.length), currentCard]\n          \n        }  \n      } else {\n          return [{native_word:'Wooh complete!', translation: 'You are awesome!'}]\n        }\n      default:\n        return state;\n    }\n  };\n\n\n  export default flashcards;","const settingsReducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'DISPLAY_SETTINGS':\n      console.log('payload', action.payload)\n      if(action.payload == undefined){\n        return {}\n      } else {\n        return action.payload;\n      }\n      default:\n        return state;\n    }\n  };\n\n\n  export default settingsReducer;","const flashcardHistory = (state = [], action) => {\n    switch (action.type) {\n      case 'DISPLAY_HISTORY':\n      console.log('history payload', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n\n\n  export default flashcardHistory;","const api = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_API':\n      console.log('api_payload', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n\n\n  export default api;","const languages = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_LANGUAGES':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default languages;","const allcards = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_All_CARDS':\n      console.log('all cards', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n\n\n  export default allcards;","const masteredCards = (state = {}, action) => {\n    switch (action.type) {\n      case 'SET_MASTERED':\n      console.log('payload', action.payload)\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n\n\n  export default masteredCards;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport userReducerToSettings from './userReducerToSettings'\nimport flashcards from './flashcardsReducer'\nimport settingsReducer from './settingsReducer'\nimport flashcardHistory from './historyReducer'\nimport api from './apiReducer'\nimport languages from './languagesReducer'\nimport allcards from './allCardsReducer'\nimport masteredCards from './masteredCardsReducer'\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  userReducerToSettings, \n  flashcards,\n  settingsReducer,\n  flashcardHistory,\n  api,\n  languages,\n  allcards,\n  masteredCards,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n    \n    const resp = yield axios.get(`api/user/settings/${response.data.id}`)\n    \n    \n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({type: 'SET_USER_TO_SETTINGS', payload: resp.data})\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"GET_FLASHCARDS\" actions\nfunction* getFlashcards(action) {\n  try {\n\n    const response = yield call(axios.get, '/flashcards', {params: {id: action.payload.id, filter: action.payload.filter}});\n    yield put({type: 'SET_FLASHCARD', payload: response.data})\n    \n  } catch (error) {\n    console.log('Error getting flashcards:', error);\n    \n  }\n}\n\n// worker Saga: will be fired on \"GET_MASTERED\" actions\nfunction* getMastered(action) {\n  try {\n    console.log('get words mastered', action.payload)\n    const response = yield call(axios.get, '/flashcards/mastered', {params: {id: action.payload}});\n    yield put({type: 'SET_MASTERED', payload: response.data[0]})\n    \n  } catch (error) {\n    console.log('Error getting mastered flashcards:', error);\n    \n  }\n}\n\nfunction* checkForDuplicate(action) {\n  try {\n\n    const response = yield call(axios.get, '/flashcards/duplicate', {params: {id: action.payload.id, word: action.payload.inputText, translation: action.payload.translation}});\n    console.log('this is the server response',response.data)\n    if(response.data.length < 1){\n      yield put({type: 'SET_FLASHCARD', payload: response.data})\n      yield call(axios.post, '/flashcards', action.payload)\n    } else {\n      alert('duplicate')\n    }\n    \n  } catch (error) {\n    console.log('Error getting flashcards:', error);\n    \n  }\n}\n\n//worker Saga: will be fired on \"MAKE_FLASHCARD\" actions\nfunction* makeFlashcard(action) {\n  try{\n\n    yield call(axios.post, '/flashcards', action.payload)\n\n  } catch(error) {\n    console('Error creating flashcard:', error)\n  }\n}\n\nfunction* editFlashcard(action) {\n  try{\n    yield call(axios.put, '/flashcards/edit', action.payload)\n    yield put({type: 'GET_ALL_CARDS', payload: action.payload.user_id})\n  }\n  catch(error) {\n    console.log('Error editting flashcard:', error)\n  }\n}\n\nfunction* lockCard(action) {\n  try{\n    yield call(axios.put, '/flashcards/update', action.payload)\n    yield call(axios.put, '/settings/mastered', action.payload)\n    yield put({type: 'GET_MASTERED',  payload: action.payload.user_id})\n    yield put({type: 'UPDATE_FLASHCARD_ARRAY'})\n  }\n  catch(error) {\n    console.log('Error locking card', error)\n  }\n}\n\n\nfunction* flashcardsSaga() {\n  yield takeLatest('GET_FLASHCARDS', getFlashcards);\n  yield takeLatest('GET_MASTERED', getMastered)\n  yield takeLatest('MAKE_FLASHCARD', makeFlashcard);\n  yield takeLatest('EDIT_FLASHCARD', editFlashcard)\n  yield takeLatest('CHECK_FOR_DUPLICATE', checkForDuplicate)\n  yield takeLatest('LOCK_CARD', lockCard)\n  \n}\n\nexport default flashcardsSaga;","import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"GET_SETTINGS\" actions\nfunction* getSettings(action) {\n  try {\n    console.log('get', action)\n    const response = yield call(axios.get, '/settings', {params: {id: action.payload}});\n    yield put({type: 'DISPLAY_SETTINGS', payload: response.data[0]})\n    \n  } catch (error) {\n    console.log('Error getting settings:', error);\n    \n  }\n}\n\n// worker Saga: will be fired on\"UPDATE_SETTINGS\" actions\nfunction* setSettings(action) {\n  try {\n\n    yield call(axios.put, '/settings/update', action.payload)\n    yield put({type: 'GET_SETTINGS', payload: action.payload.user_id})\n    \n  } catch(error) {\n    console.log('Error Updating settings:', error)\n  }\n}\n\n//worker Saga: will be fired on \"NEW_SETTINGS\" actions\nfunction* newSettings(action) {\n  try{\n    yield call(axios.post, '/settings', action.payload)\n    yield put({type: 'GET_SETTINGS', payload: action.payload.user_id})\n    yield put({type: 'FETCH_USER'})\n  } catch(error) {\n    console.log('Error Getting settings:', error)\n  }\n}\n\nfunction* settingsSaga() {\n  yield takeLatest('GET_SETTINGS', getSettings);\n  yield takeLatest('UPDATE_SETTINGS', setSettings);\n  yield takeLatest('NEW_SETTINGS', newSettings);\n  \n}\n\nexport default settingsSaga;","import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"GET_HISTORY\" actions\nfunction* getHistory(action) {\n  try {\n    \n    const response = yield call(axios.get, '/history', {params: {id: action.payload}});\n    yield put({type: 'DISPLAY_HISTORY', payload: response.data})\n    \n  } catch (error) {\n    console.log('Error getting history:', error);\n    \n  }\n}\n\n//worker Saga: will be fired on\"POST_HISTORY\" actions\nfunction* setHistory(action) {\n  try {\n    console.log(action.payload)\n    yield call(axios.post, '/history', action.payload)\n    yield call(axios.put, '/flashcards/update', action.payload)\n    yield put({type: 'UPDATE_FLASHCARD_ARRAY', payload: action.payload.frequencyUpdate.correct})\n    \n  } catch(error) {\n    console.log('Error Updating history:', error)\n  }\n}\n\nfunction* historySaga() {\n  yield takeLatest('GET_HISTORY', getHistory);\n  yield takeLatest('POST_HISTORY', setHistory);\n  \n}\n\nexport default historySaga;","import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n\nfunction* apiRequest(action) {\n    try {\n        \n        const response = yield call(axios.get, `/api/search?q=${action.payload}`);\n        console.log(action.payload)\n        console.log(response.data)\n        if(response.data == 'reverse'){\n            console.log('hello')\n            const resp = yield call(axios.get, `/api/search/reverse?q=${action.payload}`)\n            yield put( { type: 'SET_API', payload: resp.data.data.translations[0].translatedText});\n        } else {\n            yield put( { type: 'SET_API', payload: response.data.data.translations[0].translatedText});\n        } \n    }\n    catch (error) {\n        console.log('Error making API request:', error);\n        \n    }\n}\n\nfunction* apiRequestSaga() {\n    yield takeLatest('SEND_API_REQUEST', apiRequest);\n}\n\nexport default apiRequestSaga","import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n\nfunction* getLanguages(action) {\n    try {\n        \n        const response = yield call(axios.get, `/languages`);\n        yield put( { type: 'SET_LANGUAGES', payload: response.data}); \n    }\n    catch (error) {\n        console.log('Error making GET language:', error);\n        \n    }\n}\n\nfunction* languagesSaga() {\n    yield takeLatest('GET_LANGUAGES', getLanguages);\n}\n\nexport default languagesSaga","import { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"GET_FLASHCARDS\" actions\nfunction* getAllCards(action) {\n  try {\n\n    const response = yield call(axios.get, '/allcards', {params: {id: action.payload}});\n    yield put({type: 'SET_All_CARDS', payload: response.data})\n    \n  } catch (error) {\n    console.log('Error getting all cards:', error);\n    \n  }\n}\n\nfunction* allCardsSaga() {\n  yield takeLatest('GET_ALL_CARDS', getAllCards);\n  \n}\n\nexport default allCardsSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport flashcardsSaga from './flashcardsSaga'\nimport settingsSaga from './settingsSaga'\nimport historySaga from './historySaga'\nimport apiRequestSaga from './apiRequestSaga'\nimport languagesSaga from './languagesSage';\nimport allCardsSaga from './allCardsSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    flashcardsSaga(),\n    settingsSaga(),\n    historySaga(),\n    apiRequestSaga(),\n    languagesSaga(),\n    allCardsSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\n\nconst Nav = (props) => (\n  <div className=\"nav\">\n    <Link to=\"/home\">\n      <h2 className=\"nav-title\">Flash Translate</h2>\n    </Link>\n    <div className=\"nav-right\">\n      <Link className=\"nav-link\" to=\"/flashcards\">\n        {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n        {props.user.id ? 'Learn' : 'Login / Register'}\n      </Link>\n      {/* Show the link to the info page and the logout button if the user is logged in */}\n      {props.user.id && (\n        <>\n          <Link className=\"nav-link\" to=\"/translate\">\n            Translator\n          </Link>\n          <Link className=\"nav-link\" to=\"/settings\">\n            Settings\n          </Link>\n          <Link className=\"nav-link\" to=\"/allcards\">\n            All Cards\n          </Link>\n          <Link className=\"nav-link\" to=\"/statistics\">\n            Statistics\n          </Link>\n          <LogOutButton className=\"nav-link\"/>\n        </>\n      )}\n      {/* Always show this link since the about page is not protected */}\n      <Link className=\"nav-link\" to=\"/about\">\n        About\n      </Link>\n    </div>\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    \n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles, TextField, Typography, OutlinedInput, Dialog, Input } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nconst styles = theme => ({\n  containers : {\n    display: 'flex',\n    justifyContent: 'center',\n    },\n    header: {\n      display: 'flex',\n      fontSize: 25,\n      marginLeft:25,\n    },\n    form : {\n      backgroundColor: '#dbd5d5',\n      height: 'auto',\n      margin: 20,\n      padding: 25,\n      borderRadius: 5,\n    },\n    paper : {\n      width: 750,\n      display: 'flex',\n      justifyContent: 'space-around',\n      // paddingTop: 20,\n      // paddingBottom: 20,\n    },\n    inputTitles : {\n      marginTop : 35,\n      width: 350,\n    },\n    labels : {\n      marginBottom: 48,\n    },\n    inputFields : {\n      display: 'flex',\n      flexDirection: 'column',\n      marginTop: 10,\n    },\n    button : {\n      margin: 22,\n    },\n    confirmButton : {\n      margin: 22,\n    }\n\n})\n\nclass SettingsPage extends Component {\n\n  //state needs multiple open parameters in order to differentiate between\n  //the settings pop-ups\n  state = {\n    native_language : null,\n    translated_language: null,\n    cards_per_session: null,\n    words_mastered: null,\n    words_per_week: null,\n    open1: false,\n    open2: false,\n    open3: false,\n    open4: false,\n    open5: false,\n  }\n\n  //this function gets current settings from the database\n  getSettings=() => {\n    this.props.dispatch({type: 'GET_SETTINGS', payload: this.props.user.id})\n  }\n\n  //this function gets all languages from the database\n  getLanguages=() => {\n    this.props.dispatch({type: 'GET_LANGUAGES'})\n  }\n\n  //this calls our getSettings function once the page loads\n  componentDidMount() {\n    this.getSettings();\n    this.getLanguages();\n    \n  }\n  \n  //this function handles the changes to settings which happen when a user\n  //updates one of the dropdown menus\n  handleChange= (tag)=> event => {\n    this.setState({\n      ...this.state,\n      [tag] : event.target.value\n    })\n    console.log(this.state)\n  }\n\n  //this function handles which dropdown menu will be opened when a user clicks one of\n  // the change settings buttons\n  handleClickOpen = (tag) =>{\n    this.setState({\n      ...this.state,\n      [tag] : true,\n    })\n\n  }\n\n  //this function will close whichever settings menu is currently open\n  handleClose= (tag) => {\n    this.setState({\n      ...this.state,\n      [tag]: false,\n    })\n  }\n\n  //this function updates the current users settings\n  updateSettings=()=> {\n    let s = this.state\n    let l = this.props.settings\n    \n    if(this.props.settings.native_language) {\n      console.log('updating')\n    this.props.dispatch(\n      {type: 'UPDATE_SETTINGS', \n      payload: {\n        native: s.native_language || l.nat_lang_id, \n        translated: s.translated_language || l.trans_lang_id,\n        words_per_week: s.words_per_week || l.words_per_week, \n        words: s.words_per_session || l.cards_per_session,\n        words_mastered: s.words_mastered || l.words_mastered, \n        user_id: this.props.user.id\n      }\n    })\n  } else {\n    console.log('new')\n    this.props.dispatch(\n      {type: 'NEW_SETTINGS',\n      payload: {\n        native: s.native_language, \n        translated: s.translated_language,\n        words_per_week: s.words_per_week, \n        words: s.words_per_session, \n        words_mastered: s.words_mastered,\n        user_id: this.props.user.id\n      }\n    })\n  }\n  }\n  \n\n  render() {\n    const {classes} = this.props\n    return (\n      <div className={classes.containers}>\n      {/* {JSON.stringify(this.props.settings)} */}\n        <div className={classes.form}>\n          <Paper >\n          <header className={classes.header}>\n              <h3> Settings</h3>\n            </header>\n            <div className={classes.paper}>\n            <div className={classes.inputTitles}>\n              <Typography className={classes.labels} variant='h6'>\n                Native Language: {this.props.settings.native_language}\n              </Typography>\n              <Typography className={classes.labels} variant='h6'>\n                Translation Language: {this.props.settings.translated_language}\n              </Typography>\n              <Typography className={classes.labels} variant='h6'>\n                Words Per Week: {this.props.settings.words_per_week}\n              </Typography>\n              <Typography className={classes.labels} variant='h6'>\n                Words Per Session: {this.props.settings.cards_per_session}\n              </Typography>\n              <Typography className={classes.labels} variant='h6'>\n                Words Mastered: {this.props.settings.words_mastered}\n              </Typography>\n            </div>\n            <div className={classes.inputFields}>\n            \n            <Button className={classes.button} onClick={()=>this.handleClickOpen('open1')} variant=\"raised\" >Change Native Language</Button>\n            <Dialog\n              disableBackdropClick\n              disableEscapeKeyDown\n              open={this.state.open1}\n              onClose={this.handleClose}\n              >\n              <DialogTitle>Select Language</DialogTitle>\n              <DialogContent>\n                <FormControl>\n                  <InputLabel>Language</InputLabel>\n                  <Select\n                    native\n                    value={this.state.native_language}\n                    onChange={this.handleChange('native_language')}\n                    >\n                    <option />\n                    {this.props.languages.map(language => {\n                      return(<option value={language.id}>{language.language}</option>)\n                    })}\n                    </Select>\n                </FormControl>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={()=>this.handleClose('open1')}>\n                  Cancel\n                </Button>\n                <Button onClick={()=>this.handleClose('open1')}>\n                  Confirm\n                </Button>\n              </DialogActions>\n              </Dialog>\n\n              <Button className={classes.button} onClick={()=>this.handleClickOpen('open2')} variant=\"raised\">Change Translated Language</Button>\n            <Dialog\n              disableBackdropClick\n              disableEscapeKeyDown\n              open={this.state.open2}\n              onClose={this.handleClose}\n              >\n              <DialogTitle>Select Language</DialogTitle>\n              <DialogContent>\n                <FormControl>\n                  <InputLabel>Language</InputLabel>\n                  <Select\n                    native\n                    //value={this.state.translated_language}\n                    onChange={this.handleChange('translated_language')}\n                    >\n                    <option />\n                    {this.props.languages.map(language => {\n                      return(<option value={language.id}>{language.language}</option>)\n                    })}\n                    </Select>\n                </FormControl>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={()=>this.handleClose('open2')}>\n                  Cancel\n                </Button>\n                <Button onClick={()=>this.handleClose('open2')}>\n                  Confirm\n                </Button>\n              </DialogActions>\n              </Dialog>\n\n              <Button className={classes.button} onClick={()=>this.handleClickOpen('open3')} variant=\"raised\">Change Words Per Week</Button>\n            <Dialog\n              disableBackdropClick\n              disableEscapeKeyDown\n              open={this.state.open3}\n              onClose={this.handleClose}\n              >\n              <DialogTitle>How Many Words Will You Master Each Week?</DialogTitle>\n              <DialogContent>\n                <FormControl>\n                  <InputLabel></InputLabel>\n                    \n                      <TextField\n                        label='Words Known'\n                        value= {this.state.words_per_week}\n                        \n                        onChange={this.handleChange('words_per_week')}\n                        variant='outlined'\n                        margin= 'normal'\n                      />\n                </FormControl>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={()=>this.handleClose('open3')}>\n                  Cancel\n                </Button>\n                <Button onClick={()=>this.handleClose('open3')}>\n                  Confirm\n                </Button>\n              </DialogActions>\n              </Dialog>\n\n              <Button className={classes.button} onClick={()=>this.handleClickOpen('open4')} variant=\"raised\">Change Words Per Session</Button>\n            <Dialog\n              disableBackdropClick\n              disableEscapeKeyDown\n              open={this.state.open4}\n              onClose={this.handleClose}\n              >\n              <DialogTitle>Change Cards Per Session</DialogTitle>\n                <DialogContent>\n                  <FormControl>\n                    <InputLabel></InputLabel>\n                    <Select\n                      native\n                      //value={this.state.cards_per_session}\n                      onChange={this.handleChange('words_per_session')}\n                      >\n                        <option/>\n                        <option value='20'>20</option>  \n                        <option value='40'>40</option>\n                      </Select>\n                  </FormControl>\n                </DialogContent>\n              <DialogActions>\n                <Button onClick={()=>this.handleClose('open4')}>\n                  Cancel\n                </Button>\n                <Button onClick={()=>this.handleClose('open4')}>\n                  Confirm\n                </Button>\n              </DialogActions>\n              </Dialog>\n\n              <Button className={classes.button} onClick={()=>this.handleClickOpen('open5')} variant=\"raised\">Change Words Mastered</Button>\n            <Dialog\n              disableBackdropClick\n              disableEscapeKeyDown\n              open={this.state.open5}\n              onClose={this.handleClose}\n              >\n              <DialogTitle>How Many Words Have You Mastered?</DialogTitle>\n              <DialogContent>\n                <FormControl>\n                  <InputLabel></InputLabel>\n                    <p>\n                      Below is a list of words and which level of word mastery they fall under.<br></br>\n                      <br></br>\n                      0 - 250 : He, She, Woman, Go, In, Make, House<br></br>\n                      250 - 500 : Under, Together, Music, Until, Feel, Knew<br></br>\n                      500-1000 : Wait, Deep, Meet, Skin, Protect, Current<br></br>\n                      1000-1500: Nature, Motion, Enemy, Glass, Happen, Powerful<br></br>\n                      1500-2000: Somehow, Emergency, Occasion, Adjust<br></br>\n                      <br></br>\n                      Enter a number below that fits the range you fall into.\n                    </p>\n                      <TextField\n                        label='Words Known'\n                        value= {this.state.words_mastered}\n                        \n                        onChange={this.handleChange('words_mastered')}\n                        variant='outlined'\n                        margin= 'normal'\n                      />\n                    \n                </FormControl>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={()=>this.handleClose('open5')}>\n                  Cancel\n                </Button>\n                <Button onClick={()=>this.handleClose('open5')}>\n                  Confirm\n                </Button>\n              </DialogActions>\n              </Dialog>\n\n            </div>\n            </div>\n            <Button className={classes.confirmButton} onClick={this.updateSettings} variant='outlined'>Confirm</Button>\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  user: state.user,\n  settings: state.settingsReducer,\n  languages: state.languages,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(SettingsPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport {Bar, Line, Pie} from 'react-chartjs-2';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n  containers : {\n    display: 'flex',\n    marginTop: 40,\n    marginRight: 15,\n    justifyContent: 'flex-start',\n    // position: 'relative',\n    },\n    pieholder: {\n      display: 'flex',\n      flexDirection: 'column',\n      leftPadding: 25,\n      margin: 'auto',\n    },\n    piechart : {\n      // width: 300,\n      height: 240,\n      display: 'flex',\n      justifyContent: 'spaceBetween',\n      paddingLeft: 15,\n    }\n\n\n    \n\n})\nclass ProgressChart extends Component {\n\n  //this function gets current settings from the database\n  getSettings=() => {\n    this.props.dispatch({type: 'GET_SETTINGS', payload: this.props.user.id})\n  }\n\n  getWordsMastered=() => {\n    this.props.dispatch({type: 'GET_MASTERED', payload: this.props.user.id})\n  }\n\n  componentDidMount() {\n      this.getSettings();\n      this.getWordsMastered();\n  }\n\n  render() {\n    const {classes} = this.props\n    return (\n      <div className={classes.containers}>\n        <div className={classes.pieholder}>\n        {/* <div className={classes.piechart}>\n        <Pie\n            data={{\n              labels: ['Total Words Mastered','Words To Go'],\n              datasets:[\n                {\n                  label:'Words To Fluency',\n                  data:\n                    [this.props.settings.words_mastered, 3000-this.props.settings.words_mastered]\n                  ,\n                  backgroundColor:[\n                    'green',\n                    'red'\n                  ]\n                }\n              ]\n            }}\n            options={{\n              title:{\n                display:true,\n                text:`Master ${3000-this.props.settings.words_mastered} More Words!`,\n                fontSize:25\n              },\n              legend:{\n                display:true,\n                position:'right'\n              },\n              cutoutPercentage: 50,\n            }}\n            />\n        </div> */}\n        <div className={classes.piechart}>\n        <Bar\n            data={{\n              labels: ['Weekly Progress'],\n              datasets:[\n                {\n                  label:'Mastered',\n                  data: [this.props.mastered.count],\n                  backgroundColor: ['green']\n                },\n                {\n                  label: 'Words To Go',\n                  data: [this.props.settings.words_per_week],\n                  backgroundColor: ['red']\n                }\n              ]\n            }}\n            options={{\n              title:{\n                display:true,\n                text:`Weely Progress!`,\n                fontSize:25\n              },\n              legend:{\n                display:true,\n                position:'right'\n              },\n              maintainAspectRatio: false,\n              scales: {\n                xAxes: [{\n                  stacked: true,\n                  categoryPercentage: 0.9,\n                  \n                  \n                }],\n                yAxes: [{\n                  stacked: true,\n                  ticks: {\n                      beginAtZero: true,\n                      max: this.props.settings.words_per_week,\n                      stepSize: 3,\n                      }\n                    }],\n              }\n            }}\n            />\n        </div>\n        {/* {JSON.stringify(this.props.mastered)} */}\n      </div>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  user: state.user,\n  hist: state.flashcardHistory,\n  settings: state.settingsReducer,\n  mastered: state.masteredCards,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(ProgressChart));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {withStyles} from '@material-ui/core';\nimport { call, put} from 'redux-saga/effects';\nimport ProgressChart from '../ProgressChart/ProgressChart';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport {ThumbUpAlt, ThumbDownAlt, Lock} from '@material-ui/icons'\n\nconst styles = theme => ({\n  container : {\n    display : 'flex',\n    justifyContent: 'center',\n    \n    \n  },\n  flashcardBox : {\n    display: 'flex',\n    justifyContent: 'space-between',\n    // backgroundColor: 'grey',\n    backgroundColor: '#dbd5d5',\n    width: 500,\n    padding: 35,\n    marginTop: 40,\n    borderRadius: 10,\n  },\n  options : {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    \n    paddingLeft: 10,\n    paddingBottom:15,\n  },\n  group: {\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#E8E8E8',\n\n  },\n  select: {\n    height: 30,\n    marginLeft: 0,\n  },\n  flashcard: {\n    display: 'flex',\n    backgroundColor: 'white',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'column',\n    height: 180,\n    width: 250,\n    // marginLeft: 20,\n    // marginRight: 20,\n  },\n  responseButtons: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    // alignSelf: 'flex-end',\n    width: 200,\n    // marginLeft: 20,\n    marginTop: 2,\n  },\n  centerItem: {\n    margin: 'auto',\n  },\n  word: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    textAlign: 'center',\n    alignItems: 'center',\n    width: 250,\n    height: 100,\n    margin: 'auto',\n    fontSize: 25,\n  },\n  response: {\n    fontSize: 11,\n    padding: 10,\n  },\n  page: {\n    display: 'flex'\n  }\n})\n\nclass FlashcardsPage extends Component {\n\n  state = {\n    sortBy : '',\n    front: '',\n    back: '',\n    word_id: '',\n    flip: false,\n  }\n\n  //this function updates state when a new filter is selected\n  handleChange= (event)=> {\n    this.setState({\n      ...this.state,\n      sortBy: event.target.value\n    })\n  }\n\n  //Dispatch a request to get flashcards from the database\n  //pass the user_id and a filter as the payload to sort the database query\n  getFlashcards= ()=> {\n    \n    this.props.dispatch({type: 'GET_FLASHCARDS', payload: {id: this.props.user.id, filter: this.state.sortBy}})\n  }\n\n  componentDidUpdate(prevProps){\n    if(this.props.flashcards !== prevProps.flashcards){\n      this.beginFlashcardSession()\n    }\n  }\n  \n\n  beginFlashcardSession=()=> {\n    let deck = this.props.flashcards;\n    let card = this.props.flashcards[0];\n    let front = card.native_word\n    let back = card.translation;\n    let word_id = card.id\n    this.setState({\n      ...this.state,\n      front: front,\n      back: back,\n      word_id : word_id,\n    }, ()=>this.displayFlashcard(deck))\n  }\n\n  flipCard = () => {\n    this.setState({\n      ...this.state,\n      flip: !this.state.flip,\n    })\n  }\n\n  displayFlashcard = (deck) => {\n    if(!this.state.flip){\n      return this.state.front;\n    } else {\n      return (<div><div>{this.state.back}</div></div>)\n    }\n  }\n\n  sendAnswer = (number) => {\n    let frequencyUpdate = {}\n    switch(number) {\n      case '1':\n      frequencyUpdate = {frequency: 'frequency+0.05', incorrect: 1, correct: 0, date_mastered: null};\n      this.props.dispatch({type: 'POST_HISTORY', payload: {user_id : this.props.user.id, word_id : this.state.word_id, frequencyUpdate}})\n      break;\n      case '2':\n      frequencyUpdate = {frequency: '0', words_mastered: 'words_mastered+1', date_mastered: 'now()'};\n      this.props.dispatch({type: 'LOCK_CARD', payload: {user_id : this.props.user.id, word_id : this.state.word_id, frequencyUpdate}})\n      break;\n      case '3':\n      frequencyUpdate = {frequency: 'frequency-0.05', incorrect: 0, correct: 1, date_mastered: null};\n      this.props.dispatch({type: 'POST_HISTORY', payload: {user_id : this.props.user.id, word_id : this.state.word_id, frequencyUpdate}})\n      break;\n    }\n  }\n  \n\n  render() {\n    const {classes} = this.props\n    return (\n      <div className={classes.page}>\n      <div className={classes.progressChart}>\n        <ProgressChart />\n        </div>\n      <div className={classes.container}>\n        <div className={classes.flashcardBox}>\n          <div className={classes.options}>\n            <Button onClick={this.getFlashcards} variant='raised'>Begin Flashcards</Button>\n            <FormControl>\n              <RadioGroup className={classes.group} value={this.state.sortBy} onChange={this.handleChange}>\n                <FormControlLabel className={classes.select} value='id DESC' control={<Radio />} label='Newest'/>\n                <FormControlLabel className={classes.select} value='frequency' control={<Radio />} label='Difficulty' />\n                <FormControlLabel className={classes.select} value='RANDOM()' control={<Radio />} label='Random' />\n              </RadioGroup>\n            </FormControl>\n          </div>\n          <div>\n            <div className={classes.flashcard} >\n              <div className={classes.word} onClick={this.flipCard}> \n              <p className={classes.centerItem}>{this.displayFlashcard()}</p>\n              </div>\n              <div className={classes.responseButtons}>\n              <IconButton onClick={()=>this.sendAnswer('1')}>\n              <ThumbDownAlt />\n              </IconButton >\n              <IconButton onClick={()=>this.sendAnswer('2')}>\n              <Lock />\n              </IconButton>\n              <IconButton onClick={()=>this.sendAnswer('3')}>\n              <ThumbUpAlt />\n              </IconButton></div>\n            </div>\n          </div>\n        </div>\n        {/* {JSON.stringify(this.props.flashcards)} */}\n      </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  flashcards: state.flashcards\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(FlashcardsPage));","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\nimport SettingsPage from '../SettingsPage/SettingsPage'\nimport FlashcardsPage from '../FlashcardsPage/FlashcardsPage'\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    userReducerToSettings,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  console.log(userReducerToSettings)\n  \n  if(user.id && userReducerToSettings.length > 0) {\n    console.log('settings are not empty')\n    // if the user is logged in and has settings(only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if(user.id) {\n\n    // if the user is logged in and does not have settings\n    //route to settings page\n    ComponentToShow = SettingsPage;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n    userReducerToSettings: state.userReducerToSettings,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\n\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst AboutPage = () => (\n  <div>\n    <div>\n      <p>\n        This about page is for anyone to read!\n      </p>\n    </div>\n    <div >\n    </div>\n  </div>\n);\n\nexport default AboutPage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\n\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\nconst UserPage = (props) => (\n  <div>\n    <h1 id=\"welcome\">\n      Welcome, { props.user.username }!\n    </h1>\n    <p>Your ID is: {props.user.id}</p>\n    <LogOutButton className=\"log-in\" />\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(UserPage);\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst InfoPage = () => (\n  <div>\n    <p>\n      Info Page\n    </p>\n  </div>\n);\n\nexport default InfoPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core';\nimport ProgressChart from '../ProgressChart/ProgressChart'\n\nconst styles = theme => ({\n  input : {\n    width: 500,\n    // backgroundColor: '#E8E8E8',\n    backgroundColor: 'white',\n    borderRadius: 5,\n  },\n  container : {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  translateBox : {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    // backgroundColor: 'grey',\n    backgroundColor: '#dbd5d5',\n    width: 500,\n    padding: 35,\n    marginTop: 40,\n    borderRadius: 10,\n  },\n  translateButton: {\n    display: 'flex',\n    alignSelf: 'center',\n    width: 150,\n    padding: 10,\n  },\n  translation: {\n    width: 500,\n    height: 100,\n    // backgroundColor: '#E8E8E8',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    padding: 10,\n  },\n  buttonContainer : {\n    display: 'flex',\n    justifyContent: 'space-around',\n  },\n  page : {\n    display: 'flex',\n  }\n})\n\nclass TranslationPage extends Component {\n  \n  state = {\n    inputText: '',\n    translation: '',\n  }\n\n  //this function clears the input and translation fields\n  clearFields= () => {\n    this.setState({\n      ...this.state,\n      inputText: '',\n      translation: '',\n    })\n  }\n\n  componentDidMount() {\n      this.props.dispatch({type: 'GET_SETTINGS', payload: this.props.user.id})\n    \n  }\n\n  //this function creates the API request to have a word/s translated\n  translatePhrase= () => {\n    this.props.dispatch({type: 'SEND_API_REQUEST', payload: \n      `${this.state.inputText}&target=${this.props.settings.translated_language_code}&source=${this.props.settings.native_language_code}`})\n  }\n\n  //this function updates state when the input field text is updated\n  handleChange= (tag) => event => {\n    this.setState({\n      ...this.state,\n      [tag] : event.target.value\n    })\n  }\n\n  //this function will save the text and translation as a flashcard in the database\n  saveFlashCard=()=> {\n    if(this.state.inputText && this.state.translation){\n      this.props.dispatch({type: 'CHECK_FOR_DUPLICATE', payload: {...this.state, id: this.props.user.id, language_id: this.props.settings.trans_lang_id}})\n      this.clearFields();\n    } else {\n      alert('Fill in both fields')\n    }\n  }\n\n  //checks for the api reducers state to update and \n  //then set state for translation\n  componentDidUpdate(prevProps){\n    if(this.props.api !== prevProps.api){\n      this.setState({\n        ...this.state,\n        translation : this.props.api\n      })\n    }\n  }\n\n  render() {\n    const {classes} = this.props\n    return (\n      <div className={classes.page}>\n        <div className={classes.progressChart}>\n        <ProgressChart />\n        </div>\n      <div className={classes.container}>\n        <div className={classes.translateBox}>\n          <TextField\n            label='Input Text'\n            value= {this.state.inputText}\n            className={classes.input}\n            onChange={this.handleChange('inputText')}\n            variant='outlined'\n            margin= 'normal'\n          />\n          <Button  onClick={this.translatePhrase} className={classes.translateButton} variant='raised'>Translate</Button>\n          <TextField\n            className={classes.translation}\n            value={this.state.translation}\n            onChange={this.handleChange('translation')}\n            // variant='outlined'\n            multiline\n            rows=\"6\"\n            margin='normal'\n          />\n          <div className={classes.buttonContainer}>\n            <Button onClick={this.clearFields} variant='raised'>Discard</Button>\n            <Button  onClick={this.saveFlashCard} variant='raised'>Accept</Button>\n          </div>\n        </div>\n        {/* {JSON.stringify(this.props.flashcards)} */}\n      </div>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  user: state.user,\n  api: state.api,\n  settings: state.settingsReducer,\n  flashcards: state.flashcards\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(TranslationPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport {Bar, Line, Pie} from 'react-chartjs-2';\nimport { withStyles } from '@material-ui/core';\nimport ProgressChart from '../ProgressChart/ProgressChart'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton'\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    borderWidth: 2,\n    borderSyle: 'solid',\n    borderColor: 'black',\n    fontSize: 20,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  containers : {\n    display: 'flex',\n    justifyContent: 'center',\n    },\n    pieholder: {\n      display: 'flex',\n    },\n    piechart : {\n      width: 400,\n      display: 'flex',\n    },\n    table : {\n      width: 750,\n      marginTop: 40,\n      margin: 'auto',\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default,\n      },\n    },\n    \n\n})\nclass StatisticsPage extends Component {\n  \n\n  getHistory= () => {\n    this.props.dispatch({type: 'GET_HISTORY', payload: this.props.user.id})\n  }\n\n  //this function will filter through our history array in redux state and create a new array\n  //filter by past day, week, month, and all time.  Dates are converted to milliseconds for this\n  //functions math\n  searchHistory= (string) => {\n    console.log('running', string)\n    let now = Date.now();\n    switch(string){\n      case 'day':\n      \n        let dayArray = this.props.hist.filter(item => Date.parse(item.date) > now-86400000)\n        let dayCorrect = dayArray.filter(item => item.correct == 1)\n        let dayIncorrect = dayArray.filter(item => item.incorrect == 1)\n        console.log(dayCorrect, 'checkout this array')\n        return [dayCorrect.length,dayIncorrect.length];\n      case 'week':\n        let weekArray = this.props.hist.filter(item => Date.parse(item.date) > now-604800000)\n        let weekCorrect = weekArray.filter(item => item.correct == 1)\n        let weekIncorrect = weekArray.filter(item => item.incorrect == 1)\n        return [weekCorrect.length,weekIncorrect.length]; \n      case 'month':\n        let monthArray = this.props.hist.filter(item => Date.parse(item.date) > now-2419200000)\n        let monthCorrect = monthArray.filter(item => item.correct == 1)\n        let monthIncorrect = monthArray.filter(item => item.incorrect == 1)\n        return [monthCorrect.length,monthIncorrect.length]; \n      case 'career':\n        let careerCorrect = this.props.hist.filter(item => item.correct ==1)  \n        let careerIncorrect = this.props.hist.filter(item => item.incorrect ==1) \n        return [careerCorrect.length, careerIncorrect.length]\n    }\n  }\n\n  correctOrNot=(correct)=> {\n    console.log('running')\n    if(correct == 1){\n      return (<h7 style={{color: 'green'}}>✓</h7>)\n    } else {\n      return (<h7 style={{color: 'red'}}>X</h7>)\n      //return (<IconButton><DeleteIcon /></IconButton>)\n    }\n  }\n\n  componentDidMount() {\n    this.getHistory();\n  }\n\n  render() {\n    const {classes} = this.props\n    return (\n      <div>\n        {/* <div><IconButton><DeleteIcon /></IconButton></div> */}\n        <div className={classes.pieholder}>\n        {/* <ProgressChart /> */}\n        <div className={classes.piechart}>\n          <Pie\n            data={{\n              labels: ['Correct','Incorrect'],\n              datasets:[\n                {\n                  label:'Today',\n                  data:\n                    this.searchHistory('day')\n                  ,\n                  backgroundColor:[\n                    'green',\n                    'red'\n                  ]\n                }\n              ]\n            }}\n            options={{\n              title:{\n                display:true,\n                text:'Past Day',\n                fontSize:25\n              },\n              legend:{\n                display:true,\n                position:'right'\n              }\n            }}\n            />\n        </div>\n        <div className={classes.piechart}>\n          <Pie\n            data={{\n              labels: ['Correct','Incorrect'],\n              datasets:[\n                {\n                  label:'Past Week',\n                  data:\n                    this.searchHistory('week')\n                  ,\n                  backgroundColor:[\n                    'green',\n                    'red'\n                  ]\n                }\n              ]\n            }}\n            options={{\n              title:{\n                display:true,\n                text:'Past Week',\n                fontSize:25\n              },\n              legend:{\n                display:true,\n                position:'right'\n              }\n            }}\n            />\n        </div>\n        <div className={classes.piechart}>\n          <Pie\n            data={{\n              labels: ['Correct','Incorrect'],\n              datasets:[\n                {\n                  label:'Past Month',\n                  data:\n                    this.searchHistory('month')\n                  ,\n                  backgroundColor:[\n                    'green',\n                    'red'\n                  ]\n                }\n              ]\n            }}\n            options={{\n              title:{\n                display:true,\n                text:'Past Month',\n                fontSize:25\n              },\n              legend:{\n                display:true,\n                position:'right'\n              }\n            }}\n            />\n        </div>\n        <div className={classes.piechart}>\n          <Pie\n            data={{\n              labels: ['Correct','Incorrect'],\n              datasets:[\n                {\n                  label:'All Time',\n                  data:\n                    this.searchHistory('career')\n                  ,\n                  backgroundColor:[\n                    'green',\n                    'red'\n                  ]\n                }\n              ]\n            }}\n            options={{\n              title:{\n                display:true,\n                text:'All Time',\n                fontSize:25\n              },\n              legend:{\n                display:true,\n                position:'right'\n              }\n            }}\n            />\n        </div>\n        </div>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <CustomTableCell>Date</CustomTableCell>\n              <CustomTableCell>Correct</CustomTableCell>\n              <CustomTableCell>Word</CustomTableCell>\n              <CustomTableCell>Translation</CustomTableCell>\n            </TableRow>\n          </TableHead>\n        {this.props.hist.map(item => {\n          return(\n            <TableRow className={classes.row}>\n              <CustomTableCell>{item.date.slice(0,10)}</CustomTableCell>\n              <CustomTableCell>{this.correctOrNot(item.correct)}</CustomTableCell>\n              <CustomTableCell>{item.native_word}</CustomTableCell>\n              <CustomTableCell>{item.translation}</CustomTableCell>\n            </TableRow>\n          )\n        })}\n        \n        </Table>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  user: state.user,\n  hist: state.flashcardHistory\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(StatisticsPage));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProgressChart from '../ProgressChart/ProgressChart'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell';\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport Select from '@material-ui/core/Select'\nimport TextField from '@material-ui/core/TextField'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Dialog from '@material-ui/core/Dialog'\nimport Button from '@material-ui/core/Button'\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withStyles } from '@material-ui/core';\n\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    borderWidth: 2,\n    borderSyle: 'solid',\n    borderColor: 'black',\n    fontSize: 20,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  containers : {\n    display: 'flex',\n    justifyContent: 'center',\n    },\n    table : {\n      width: 750,\n      marginTop: 40,\n      margin: 'auto',\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default,\n      },\n    },\n    allCardsPage: {\n      display: 'flex'\n    }\n})\nclass AllCardsPage extends Component {\n\n  state = {\n    open : false,\n    editWord: '',\n    editTranslation: '',\n    word_id: '',\n  }\n\n\n  handleClickOpen = (word, translation, word_ids) =>{\n    this.setState({\n      ...this.state,\n      editWord: word,\n      editTranslation: translation,\n      word_id: word_ids,\n      open : true,\n    })\n  }  \n\n  handleClose= () => {\n    this.setState({\n      ...this.state,\n      open: false,\n    })\n  }\n\n  handleChange= (tag) => event=> {\n    this.setState({\n      ...this.state,\n      [tag] : event.target.value\n    })\n  }\n\n  getAllCards=() => {\n    console.log(this.props.user.id)\n    this.props.dispatch({type: 'GET_ALL_CARDS', payload: this.props.user.id})\n  }\n\n  componentDidMount() {\n    this.getAllCards();\n  }\n\n  editWord=()=> {\n    this.props.dispatch({type: 'EDIT_FLASHCARD', \n    payload: {\n      word: this.state.editWord, \n      translation: this.state.editTranslation, \n      word_id: this.state.word_id,\n      user_id: this.props.user.id,\n    }})\n    this.handleClose();\n  }\n  \n\n  render() {\n    const {classes} = this.props\n    return (\n      <div className={classes.allCardsPage}>\n        <div className={classes.progressChart}>\n        <ProgressChart />\n        </div>\n        <div className={classes.container}>\n        <Table className={classes.table}>\n          <TableHead className={classes.head}>\n            <TableRow>\n              <CustomTableCell>Word</CustomTableCell>\n              <CustomTableCell>Translation</CustomTableCell>\n              <CustomTableCell>Edit</CustomTableCell>\n            </TableRow>\n          </TableHead>\n        {this.props.allcards.map(item => {\n          return(\n            <TableRow className={classes.row}>\n              <CustomTableCell>{item.native_word}</CustomTableCell>\n              <CustomTableCell>{item.translation}</CustomTableCell>\n              <CustomTableCell>\n                <Button className={classes.button} onClick={()=>this.handleClickOpen(item.native_word, item.translation, item.id)} variant=\"raised\">Edit</Button>\n            <Dialog\n              disableBackdropClick\n              disableEscapeKeyDown\n              open={this.state.open}\n              onClose={this.handleClose}\n              >\n              <DialogTitle>Edit Card</DialogTitle>\n                <DialogContent>\n                  <FormControl>\n                    <InputLabel></InputLabel>\n                      <TextField\n                        label='Edit Word'\n                        value= {this.state.editWord}\n                        className={classes.input}\n                        onChange={this.handleChange('editWord')}\n                        variant='outlined'\n                        margin= 'normal'\n                      />\n                      <TextField\n                        label='Edit Translation'\n                        value= {this.state.editTranslation}\n                        className={classes.input}\n                        onChange={this.handleChange('editTranslation')}\n                        variant='outlined'\n                        margin= 'normal'\n                      />\n                  </FormControl>\n                </DialogContent>\n              <DialogActions>\n                <Button onClick={()=>this.handleClose()}>\n                  Cancel\n                </Button>\n                <Button onClick={()=>this.editWord()}>\n                  Confirm Edit\n                </Button>\n              </DialogActions>\n              </Dialog>\n              </CustomTableCell>\n            </TableRow>\n          )\n        })}\n        \n        </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  user: state.user,\n  allcards: state.allcards,\n  hist: state.flashcardHistory,\n  settings: state.settingsReducer,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(AllCardsPage));","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\nimport InfoPage from '../InfoPage/InfoPage';\nimport FlashcardsPage from '../FlashcardsPage/FlashcardsPage';\nimport SettingsPage from '../SettingsPage/SettingsPage';\nimport TranslationPage from '../TranslationPage/TranslationPage';\nimport StatisticsPage from '../StatisticsPage/StatisticsPage';\nimport AllCardsPage from '../AllCardsPage/AllCardsPage';\nimport ProgressChart from '../ProgressChart/ProgressChart';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'})\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n            <Route\n              exact\n              path=\"/about\"\n              component={AboutPage}\n            />\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <ProtectedRoute\n              exact\n              path=\"/home\"\n              component={UserPage}\n            />\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n            <ProtectedRoute\n              exact\n              path=\"/info\"\n              component={InfoPage}\n            />\n            {/* This route leads users to the flashcards page*/}\n            <ProtectedRoute\n              exact\n              path=\"/flashcards\"\n              component={FlashcardsPage}\n              />\n            {/* This route leads users to the translation page*/}\n            <ProtectedRoute\n              exact\n              path=\"/translate\"\n              component={TranslationPage}\n              /> \n            {/* This route leads users to the flashcards page*/}\n            <ProtectedRoute\n              exact\n              path=\"/settings\"\n              component={SettingsPage}\n              />   \n            {/* This route leads users to the all cards view page*/}\n            <ProtectedRoute\n              exact\n              path=\"/allcards\"\n              component={AllCardsPage}\n              />  \n            {/* This route leads users to the statistics page*/}\n            <ProtectedRoute\n              exact\n              path=\"/statistics\"\n              component={StatisticsPage}\n              />  \n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          \n          <Footer />\n        </div>\n      </Router>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}